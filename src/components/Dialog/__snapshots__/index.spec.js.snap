// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dialog /> Should render Dialog with CLOSE state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    open={false}
    title="All done!"
>
    Lorem ipsum
</Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Dialog)
        TransitionComponent={[Function]}
        keepMounted={true}
        onClose={[Function]}
        open={false}
>
        <WithStyles(DialogTitle)
                id="alert-dialog-slide-title"
        >
                All done!
        </WithStyles(DialogTitle)>
        <WithStyles(DialogContent)>
                <WithStyles(DialogContentText)
                        id="alert-dialog-slide-description"
                >
                        Lorem ipsum
                </WithStyles(DialogContentText)>
        </WithStyles(DialogContent)>
        <WithStyles(DialogActions)>
                <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
                >
                        OK
                </WithStyles(Button)>
        </WithStyles(DialogActions)>
</WithStyles(Dialog)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "TransitionComponent": [Function],
        "children": Array [
          <WithStyles(DialogTitle)
            id="alert-dialog-slide-title"
>
            All done!
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <WithStyles(DialogContentText)
                        id="alert-dialog-slide-description"
            >
                        Lorem ipsum
            </WithStyles(DialogContentText)>
</WithStyles(DialogContent)>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        OK
            </WithStyles(Button)>
</WithStyles(DialogActions)>,
        ],
        "keepMounted": true,
        "onClose": [Function],
        "open": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "All done!",
            "id": "alert-dialog-slide-title",
          },
          "ref": null,
          "rendered": "All done!",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(DialogContentText)
              id="alert-dialog-slide-description"
>
              Lorem ipsum
</WithStyles(DialogContentText)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Lorem ipsum",
              "id": "alert-dialog-slide-description",
            },
            "ref": null,
            "rendered": "Lorem ipsum",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              OK
</WithStyles(Button)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "OK",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "OK",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Dialog)
          TransitionComponent={[Function]}
          keepMounted={true}
          onClose={[Function]}
          open={false}
>
          <WithStyles(DialogTitle)
                    id="alert-dialog-slide-title"
          >
                    All done!
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)>
                    <WithStyles(DialogContentText)
                              id="alert-dialog-slide-description"
                    >
                              Lorem ipsum
                    </WithStyles(DialogContentText)>
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
                    <WithStyles(Button)
                              color="primary"
                              onClick={[Function]}
                    >
                              OK
                    </WithStyles(Button)>
          </WithStyles(DialogActions)>
</WithStyles(Dialog)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "TransitionComponent": [Function],
          "children": Array [
            <WithStyles(DialogTitle)
              id="alert-dialog-slide-title"
>
              All done!
</WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)>
              <WithStyles(DialogContentText)
                            id="alert-dialog-slide-description"
              >
                            Lorem ipsum
              </WithStyles(DialogContentText)>
</WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                            color="primary"
                            onClick={[Function]}
              >
                            OK
              </WithStyles(Button)>
</WithStyles(DialogActions)>,
          ],
          "keepMounted": true,
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "All done!",
              "id": "alert-dialog-slide-title",
            },
            "ref": null,
            "rendered": "All done!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(DialogContentText)
                id="alert-dialog-slide-description"
>
                Lorem ipsum
</WithStyles(DialogContentText)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Lorem ipsum",
                "id": "alert-dialog-slide-description",
              },
              "ref": null,
              "rendered": "Lorem ipsum",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                OK
</WithStyles(Button)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "OK",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "OK",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {},
  },
}
`;

exports[`<Dialog /> Should render Dialog with OPEN state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    open={true}
    title="All done!"
>
    Lorem ipsum
</Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Dialog)
        TransitionComponent={[Function]}
        keepMounted={true}
        onClose={[Function]}
        open={false}
>
        <WithStyles(DialogTitle)
                id="alert-dialog-slide-title"
        >
                All done!
        </WithStyles(DialogTitle)>
        <WithStyles(DialogContent)>
                <WithStyles(DialogContentText)
                        id="alert-dialog-slide-description"
                >
                        Lorem ipsum
                </WithStyles(DialogContentText)>
        </WithStyles(DialogContent)>
        <WithStyles(DialogActions)>
                <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
                >
                        OK
                </WithStyles(Button)>
        </WithStyles(DialogActions)>
</WithStyles(Dialog)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "TransitionComponent": [Function],
        "children": Array [
          <WithStyles(DialogTitle)
            id="alert-dialog-slide-title"
>
            All done!
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <WithStyles(DialogContentText)
                        id="alert-dialog-slide-description"
            >
                        Lorem ipsum
            </WithStyles(DialogContentText)>
</WithStyles(DialogContent)>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        OK
            </WithStyles(Button)>
</WithStyles(DialogActions)>,
        ],
        "keepMounted": true,
        "onClose": [Function],
        "open": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "All done!",
            "id": "alert-dialog-slide-title",
          },
          "ref": null,
          "rendered": "All done!",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(DialogContentText)
              id="alert-dialog-slide-description"
>
              Lorem ipsum
</WithStyles(DialogContentText)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Lorem ipsum",
              "id": "alert-dialog-slide-description",
            },
            "ref": null,
            "rendered": "Lorem ipsum",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              OK
</WithStyles(Button)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "OK",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "OK",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Dialog)
          TransitionComponent={[Function]}
          keepMounted={true}
          onClose={[Function]}
          open={false}
>
          <WithStyles(DialogTitle)
                    id="alert-dialog-slide-title"
          >
                    All done!
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)>
                    <WithStyles(DialogContentText)
                              id="alert-dialog-slide-description"
                    >
                              Lorem ipsum
                    </WithStyles(DialogContentText)>
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
                    <WithStyles(Button)
                              color="primary"
                              onClick={[Function]}
                    >
                              OK
                    </WithStyles(Button)>
          </WithStyles(DialogActions)>
</WithStyles(Dialog)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "TransitionComponent": [Function],
          "children": Array [
            <WithStyles(DialogTitle)
              id="alert-dialog-slide-title"
>
              All done!
</WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)>
              <WithStyles(DialogContentText)
                            id="alert-dialog-slide-description"
              >
                            Lorem ipsum
              </WithStyles(DialogContentText)>
</WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                            color="primary"
                            onClick={[Function]}
              >
                            OK
              </WithStyles(Button)>
</WithStyles(DialogActions)>,
          ],
          "keepMounted": true,
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "All done!",
              "id": "alert-dialog-slide-title",
            },
            "ref": null,
            "rendered": "All done!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(DialogContentText)
                id="alert-dialog-slide-description"
>
                Lorem ipsum
</WithStyles(DialogContentText)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Lorem ipsum",
                "id": "alert-dialog-slide-description",
              },
              "ref": null,
              "rendered": "Lorem ipsum",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                OK
</WithStyles(Button)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "OK",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "OK",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {},
  },
}
`;
